class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    int visited[V] = {0};
	    queue<int> q;
	    // added indegrees
	    int indegree[V] = {0};
	    for(int i=0; i<V; i++) {
	        for(auto it : adj[i]) {
	            indegree[it]++;
	        }
	    }
	    
	    //push nodes with 0 indegree to queue
	    for(int i=0; i<V; i++) {
	        if(indegree[i] == 0) {
	            q.push(i);
	        }
	    }
	    
	    vector<int> ans;
	    while(!q.empty()) {
	        int front = q.front();
	        q.pop();
	        ans.push_back(front);
	        for(auto it : adj[front]) {
	            indegree[it]--;
	            if(indegree[it]==0) {
	                q.push(it);
	            }
	        }
	    }
	    return ans;
	}
};